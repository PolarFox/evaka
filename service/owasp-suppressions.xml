<?xml version="1.0" encoding="UTF-8"?>

<!--
SPDX-FileCopyrightText: 2017-2020 City of Espoo

SPDX-License-Identifier: LGPL-2.1-or-later
-->

<suppressions xmlns="https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd">
    <suppress>
        <notes><![CDATA[
        Dependency of spring-ws-security, which is already at latest version (3.0.10.RELEASE).
        ]]></notes>
        <filePath regex="true">.*/commons-collections-3\.2\.1\.jar</filePath>
        <cve>CVE-2015-6420</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Not relevant for us as we do not use velocity templates.
        ]]></notes>
        <cve>CVE-2020-13936</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Not a vulnerability: https://github.com/spring-projects/spring-framework/issues/24434
        ]]></notes>
        <cve>CVE-2016-1000027</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Spring Security 5.4+ are not vulnerable to this, but the OSSINDEX database incorrectly flags at least 5.7.1 vulnerable
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.springframework\.security/spring\-security\-crypto@.*$</packageUrl>
        <cve>CVE-2020-5408</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack. No fix released yet as of 2022-11-14. We don't parse YAML files from untrusted sources.
        ]]></notes>
        <cve>CVE-2022-41854</cve>
        <cve>CVE-2022-3064</cve>
        <cve>CVE-2021-4235</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. No fix released yet as of 2022-12-02. We don't parse YAML files from untrusted sources.
        ]]></notes>
        <cve>CVE-2022-1471</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Only applies to configuration we don't use
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/com\.fasterxml\.jackson\.core/jackson\-databind@.*$</packageUrl>
        <cve>CVE-2022-42003</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Misidentification
        ]]></notes>
        <cve>CVE-2021-42550</cve>
    </suppress>
    <suppress base="true">
        <notes><![CDATA[
        Misidentification (https://github.com/jeremylong/DependencyCheck/issues/5121)
        ]]></notes>
        <packageUrl regex="true">^(?!pkg:maven/commons-net/commons-net).*$</packageUrl>
        <cpe>cpe:/a:apache:commons_net</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Fixed version in use, but misidentified as vulnerable
        ]]></notes>
        <cve>CVE-2022-41915</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Misidentification (https://github.com/jeremylong/DependencyCheck/issues/5213)
        ]]></notes>
        <packageUrl regex="true">^(?!pkg:maven//software.amazon.awssdk//utils).*$</packageUrl>
        <cpe>cpe:/a:utils_project:utils</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
        No fix exists, not clear where and if we even use this library
        ]]></notes>
        <cve>CVE-2022-45688</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Misidentification
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/jakarta\.(mail|activation)/jakarta\.(mail|activation)\-api@.*$</packageUrl>
        <cpe>cpe:/a:eclipse:eclipse_ide</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Bug is fixed in woodstox-core 6.4.0 (in use), but it still depends on an old version of the API package stax-api, which is identified as vulnerable
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/org\.codehaus\.woodstox/stax2\-api@.*$</packageUrl>
        <cpe>cpe:/a:fasterxml:woodstox</cpe>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Low risk and severity. All guava versions are affected, but the vulnerable function is marked deprecated and not used by our codebase.
        ]]></notes>
        <packageUrl regex="true">^pkg:maven/com\.google\.guava/guava@.*$</packageUrl>
        <cve>CVE-2020-8908</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Waiting for a fix in spring boot
        ]]></notes>
        <cve>CVE-2023-20861</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Waiting for a fix in spring boot
        ]]></notes>
        <cve>CVE-2023-20860</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        When using the RemoteIpFilter with requests received from a reverse proxy via HTTP that include the X-Forwarded-Proto header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not include the secure attribute. This could result in the user agent transmitting the session cookie over an insecure channel.
        ]]></notes>
        <cve>CVE-2023-28708</cve>
    </suppress>
    <suppress>
        <notes><![CDATA[
        Waiting for a fix in spring boot
        ]]></notes>
        <cve>CVE-2023-20863</cve>
    </suppress>
</suppressions>
